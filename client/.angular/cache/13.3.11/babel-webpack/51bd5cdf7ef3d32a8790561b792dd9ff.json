{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/services/compatibility.service\";\nimport * as i2 from \"@angular/router\";\nconst _c0 = [\"f\"];\n/**\r\n * @author Filippo Casarosa\r\n * @author Andrei Blindu\r\n */\n\nexport let EditCompatibilityComponent = /*#__PURE__*/(() => {\n  class EditCompatibilityComponent {\n    constructor(compatibilityService, route, router) {\n      this.compatibilityService = compatibilityService;\n      this.route = route;\n      this.router = router;\n      this.isFetching = false;\n      this.error = null;\n    }\n\n    ngOnInit() {\n      this.fetchPcComponent();\n    }\n\n    onUpdateCompatibility() {\n      this.loadedCompatibility.componentFamilyId1 = this.updateForm.value.id1;\n      this.loadedCompatibility.componentFamilyId2 = this.updateForm.value.id2;\n      this.compatibilityService.updateCompatibility(this.loadedCompatibility, this.loadedCompatibility.id).subscribe();\n      this.router.navigate(['/products/pc-components'], {\n        relativeTo: this.route\n      });\n    }\n\n    fetchPcComponent() {\n      this.errorSub = this.compatibilityService.error.subscribe(errorMessage => {\n        this.error = errorMessage;\n      });\n      this.route.fragment.subscribe();\n      const id = +this.route.snapshot.params['id'];\n      this.isFetching = true;\n      this.compatibilityService.getCompatibility(id).subscribe(compatibility => {\n        this.isFetching = false;\n        this.loadedCompatibility = compatibility;\n        console.log(this.loadedCompatibility);\n      }, error => {\n        this.isFetching = false;\n        this.error = error.message;\n      });\n    }\n\n  }\n\n  EditCompatibilityComponent.ɵfac = function EditCompatibilityComponent_Factory(t) {\n    return new (t || EditCompatibilityComponent)(i0.ɵɵdirectiveInject(i1.CompatibilityService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  EditCompatibilityComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditCompatibilityComponent,\n    selectors: [[\"app-edit-compatibility\"]],\n    viewQuery: function EditCompatibilityComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.updateForm = _t.first);\n      }\n    },\n    decls: 20,\n    vars: 4,\n    consts: [[1, \"form\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [\"appearance\", \"fill\", 1, \"full-width\"], [\"matInput\", \"\", \"name\", \"id1\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"disabled\", \"\", 3, \"value\"], [\"matInput\", \"\", \"name\", \"id2\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"]],\n    template: function EditCompatibilityComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function EditCompatibilityComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onUpdateCompatibility();\n        });\n        i0.ɵɵelementStart(2, \"mat-form-field\", 2)(3, \"mat-label\");\n        i0.ɵɵtext(4, \"Id Famiglia 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function EditCompatibilityComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.loadedCompatibility.componentFamily1.id = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"mat-form-field\", 2)(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Nome Famiglia 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-form-field\", 2)(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Id Famiglia 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function EditCompatibilityComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.loadedCompatibility.componentFamily2.id = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"mat-form-field\", 2)(15, \"mat-label\");\n        i0.ɵɵtext(16, \"Nome Famiglia 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 6);\n        i0.ɵɵtext(19, \"Modifica \");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.loadedCompatibility.componentFamily1.id);\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.loadedCompatibility.componentFamily1.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.loadedCompatibility.componentFamily2.id);\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.loadedCompatibility.componentFamily2.name);\n      }\n    },\n    styles: [\".form[_ngcontent-%COMP%]{min-width:150px;max-width:500px;width:100vw}.full-width[_ngcontent-%COMP%]{width:100vw}\"]\n  });\n  return EditCompatibilityComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}