name: Build and SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarQube:
    runs-on: windows-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # -----------------------------
      # Backend (Maven)
      # -----------------------------
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: C:\Users\runneradmin\.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run SonarQube Analysis
        working-directory: ./server
        shell: cmd
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify sonar:sonar -Dsonar.host.url=%SONAR_HOST_URL% -Dsonar.login=%SONAR_TOKEN%
      # -----------------------------
      # Frontend (Angular/JS/TS)
      # -----------------------------
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install frontend dependencies
        run: |
          cd client
          npm ci

      - name: Run SonarScanner for frontend
        working-directory: ./client
        shell: cmd
        run: |
          cd client
          npm install -g sonarqube-scanner
          sonar-scanner ^
            -Dsonar.projectKey=Progetto-H21 ^
            -Dsonar.sources=src ^
            -Dsonar.host.url=%SONAR_HOST_URL% ^
            -Dsonar.login=%SONAR_TOKEN%
